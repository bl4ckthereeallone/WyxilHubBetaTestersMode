
const Discord = require('discord.js');
const client = new Discord.Client();
const fs = require('fs');
const crypto = require('crypto');

const prefix = '.';

function obfuscateLua(code) {
    let obfuscated = code;
    
    obfuscated = obfuscated.replace(/(".*?")/g, function(match) {
        return '("' + Buffer.from(match.slice(1,-1)).toString('hex') + '")';
    });

    const chars = 'abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ';
    const varNames = {};
    obfuscated = obfuscated.replace(/local\s+([a-zA-Z_][a-zA-Z0-9_]*)/g, function(match, varName) {
        if (!varNames[varName]) {
            varNames[varName] = '_' + Array(10).fill().map(() => chars[Math.floor(Math.random() * chars.length)]).join('');
        }
        return 'local ' + varNames[varName];
    });

    const junkCode = [
        'do end;',
        'if false then end;',
        'while false do end;',
        'repeat until true;'
    ];

    obfuscated = obfuscated.split('\n').map(line => {
        if (Math.random() < 0.3) {
            return line + ' ' + junkCode[Math.floor(Math.random() * junkCode.length)];
        }
        return line;
    }).join('\n');

    const key = crypto.randomBytes(32);
    const iv = crypto.randomBytes(16);
    obfuscated = `
local key = '${key.toString('hex')}'
local iv = '${iv.toString('hex')}'
${obfuscated}
`;

    return obfuscated;
}

client.on('message', async message => {
    if (!message.content.startsWith(prefix) || message.author.bot) return;

    const args = message.content.slice(prefix.length).trim().split(/ +/);
    const command = args.shift().toLowerCase();

    if (command === 'obf') {
        if (message.attachments.size === 0) {
            return message.reply('Please attach a .txt file containing Lua code to obfuscate!');
        }

        const attachment = message.attachments.first();
        if (!attachment.name.endsWith('.txt')) {
            return message.reply('Please provide a .txt file!');
        }

        try {
            const response = await fetch(attachment.url);
            const code = await response.text();
            
            const obfuscatedCode = obfuscateLua(code);
            
            const fileName = 'obfuscated_' + Date.now() + '.lua';
            fs.writeFileSync(fileName, obfuscatedCode);
            
            await message.channel.send('Here is your obfuscated code:', {
                files: [{
                    attachment: fileName,
                    name: 'obfuscated.lua'
                }]
            });

            fs.unlinkSync(fileName);

        } catch (error) {
            console.error('Error:', error);
            message.reply('An error occurred while processing your file!');
        }
    }
});

client.login('MTM1NTI2NDY0MDA3NDEyMTQ3OA.GQxg2m.m1yeni1umOkhP83SG2DYmGPm4Wfb0Q2f4zQlOQ');
